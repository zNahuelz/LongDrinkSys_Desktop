<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tsPrincipal.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsBSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAANoSURBVHhe7ZpLaxNhFIbT3+MFF8m0GxfJWG8LQRQRcSki
        XqEqulERXLjyB3hZCop/Q5dVquBlY6sLe9G6yDQda5t8zknPSBreyXzzzkQz+r3wbJLmzXlOMh+hTMXF
        xcXFxcXFxSZBY3xn0Kg9avq1uabv/VzxPTMKyCwyU+BXHwb+xA4dt7iYSmUs8Gu3m3WvjQYYJbozNrxb
        MrOOnz8ij95spImWoOPni3zty/DJ99OdebK2SzX4yDWP3qAMBL73QDX4yOGCystAUK9+VA0+o3TaZyW6
        DNZUgw8qLhOqwQeVlgnV4INKy4Rq8EGlNoRTZ8zKnnH4XGYmJ/DjFqgGH1Saxtq9u8Z8/W7Wnz2JlsAP
        L4SXz5n29LRpHd0Pn09DNfig0kHE8jF5liDy5stit6f9+g21BNXgg0qT6JePYZbQKx/DLEE1+KBSyIHd
        pj0zs2XgXtafPrY+E8KrF4yZX4A9cjlkORNUgw8qTaJ1eK9pv3wFBxdsvgnok//N/KIJr12Er0tCNfig
        0kHkWULR8oJq8EGlaTBLGIa8oBp8UKkNWZYwLHlBNfigUltslhBeOT80eUE1+KDSLKQtwSwu48cLkBdU
        gw8qzUrqEvopSF5QDT6olMF6CQXKC6rBB5WyyBI6b99jcWFp2YTXL8HXsqgGH1TKEk6djQ68JSyv2PxY
        yoJq8EGlDJvyCad9H0UuQTX4oNKsZJGPKWoJqsEHlWZhoPz8kum8+4CfiyhiCarBB5XaMlh+87S3+bGU
        ZwmqwQeV2mAjH//tMJegGnxQaRpZ5GOGtQTV4INKB8HIxwxjCarBB5UmkUc+puglqAYfVIpoHTs4QH6h
        +28u9DpE68i+xH+vdWY/mdbxQ/B1CNXgg0qT+HHnRvRz9tvWoS0/+X7QN6Ez99msnj4J/z4J1eCDSgex
        ZQmkfEzvEhh5QTX4oNI0ukuILoc88jFyOWy8eG5WT52Az6ehGnxQqQ1yJqDH/zSqwQeVlgnV4INKy4Rq
        8EGlZUI1+Pz3t8gEfnUWlZeBQm6SkttPUXkZCBrefdXgI/feNuvVDfQGo4zMHNRr21QjX+S2U/QmI03D
        u6nj5090lI7JEsrwTejOGMnLzDp+cQkmq9vl9lM5GOWERQP8DWQWOfDkmi/sa+/i4uLi4uLyj6dS+QXY
        DkWUxW/YzwAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="tReloj.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>124, 17</value>
  </metadata>
</root>